# CMake generated Testfile for 
# Source directory: E:/gRPC/grpc/third_party/re2
# Build directory: E:/gRPC/grpc/vs/third_party/re2
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(charclass_test "E:/gRPC/grpc/vs/third_party/re2/Debug/charclass_test.exe")
  set_tests_properties(charclass_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(charclass_test "E:/gRPC/grpc/vs/third_party/re2/Release/charclass_test.exe")
  set_tests_properties(charclass_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(charclass_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/charclass_test.exe")
  set_tests_properties(charclass_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(charclass_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/charclass_test.exe")
  set_tests_properties(charclass_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(charclass_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(compile_test "E:/gRPC/grpc/vs/third_party/re2/Debug/compile_test.exe")
  set_tests_properties(compile_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(compile_test "E:/gRPC/grpc/vs/third_party/re2/Release/compile_test.exe")
  set_tests_properties(compile_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(compile_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/compile_test.exe")
  set_tests_properties(compile_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(compile_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/compile_test.exe")
  set_tests_properties(compile_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(compile_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filtered_re2_test "E:/gRPC/grpc/vs/third_party/re2/Debug/filtered_re2_test.exe")
  set_tests_properties(filtered_re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filtered_re2_test "E:/gRPC/grpc/vs/third_party/re2/Release/filtered_re2_test.exe")
  set_tests_properties(filtered_re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filtered_re2_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/filtered_re2_test.exe")
  set_tests_properties(filtered_re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filtered_re2_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/filtered_re2_test.exe")
  set_tests_properties(filtered_re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(filtered_re2_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(mimics_pcre_test "E:/gRPC/grpc/vs/third_party/re2/Debug/mimics_pcre_test.exe")
  set_tests_properties(mimics_pcre_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(mimics_pcre_test "E:/gRPC/grpc/vs/third_party/re2/Release/mimics_pcre_test.exe")
  set_tests_properties(mimics_pcre_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(mimics_pcre_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/mimics_pcre_test.exe")
  set_tests_properties(mimics_pcre_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(mimics_pcre_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/mimics_pcre_test.exe")
  set_tests_properties(mimics_pcre_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(mimics_pcre_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(parse_test "E:/gRPC/grpc/vs/third_party/re2/Debug/parse_test.exe")
  set_tests_properties(parse_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(parse_test "E:/gRPC/grpc/vs/third_party/re2/Release/parse_test.exe")
  set_tests_properties(parse_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(parse_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/parse_test.exe")
  set_tests_properties(parse_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(parse_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/parse_test.exe")
  set_tests_properties(parse_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(parse_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(possible_match_test "E:/gRPC/grpc/vs/third_party/re2/Debug/possible_match_test.exe")
  set_tests_properties(possible_match_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(possible_match_test "E:/gRPC/grpc/vs/third_party/re2/Release/possible_match_test.exe")
  set_tests_properties(possible_match_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(possible_match_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/possible_match_test.exe")
  set_tests_properties(possible_match_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(possible_match_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/possible_match_test.exe")
  set_tests_properties(possible_match_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(possible_match_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(re2_test "E:/gRPC/grpc/vs/third_party/re2/Debug/re2_test.exe")
  set_tests_properties(re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(re2_test "E:/gRPC/grpc/vs/third_party/re2/Release/re2_test.exe")
  set_tests_properties(re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(re2_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/re2_test.exe")
  set_tests_properties(re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(re2_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/re2_test.exe")
  set_tests_properties(re2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(re2_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(re2_arg_test "E:/gRPC/grpc/vs/third_party/re2/Debug/re2_arg_test.exe")
  set_tests_properties(re2_arg_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(re2_arg_test "E:/gRPC/grpc/vs/third_party/re2/Release/re2_arg_test.exe")
  set_tests_properties(re2_arg_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(re2_arg_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/re2_arg_test.exe")
  set_tests_properties(re2_arg_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(re2_arg_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/re2_arg_test.exe")
  set_tests_properties(re2_arg_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(re2_arg_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(regexp_test "E:/gRPC/grpc/vs/third_party/re2/Debug/regexp_test.exe")
  set_tests_properties(regexp_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(regexp_test "E:/gRPC/grpc/vs/third_party/re2/Release/regexp_test.exe")
  set_tests_properties(regexp_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(regexp_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/regexp_test.exe")
  set_tests_properties(regexp_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(regexp_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/regexp_test.exe")
  set_tests_properties(regexp_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(regexp_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(required_prefix_test "E:/gRPC/grpc/vs/third_party/re2/Debug/required_prefix_test.exe")
  set_tests_properties(required_prefix_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(required_prefix_test "E:/gRPC/grpc/vs/third_party/re2/Release/required_prefix_test.exe")
  set_tests_properties(required_prefix_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(required_prefix_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/required_prefix_test.exe")
  set_tests_properties(required_prefix_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(required_prefix_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/required_prefix_test.exe")
  set_tests_properties(required_prefix_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(required_prefix_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(search_test "E:/gRPC/grpc/vs/third_party/re2/Debug/search_test.exe")
  set_tests_properties(search_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(search_test "E:/gRPC/grpc/vs/third_party/re2/Release/search_test.exe")
  set_tests_properties(search_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(search_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/search_test.exe")
  set_tests_properties(search_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(search_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/search_test.exe")
  set_tests_properties(search_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(search_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(set_test "E:/gRPC/grpc/vs/third_party/re2/Debug/set_test.exe")
  set_tests_properties(set_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(set_test "E:/gRPC/grpc/vs/third_party/re2/Release/set_test.exe")
  set_tests_properties(set_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(set_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/set_test.exe")
  set_tests_properties(set_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(set_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/set_test.exe")
  set_tests_properties(set_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(set_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(simplify_test "E:/gRPC/grpc/vs/third_party/re2/Debug/simplify_test.exe")
  set_tests_properties(simplify_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(simplify_test "E:/gRPC/grpc/vs/third_party/re2/Release/simplify_test.exe")
  set_tests_properties(simplify_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(simplify_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/simplify_test.exe")
  set_tests_properties(simplify_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(simplify_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/simplify_test.exe")
  set_tests_properties(simplify_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(simplify_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(string_generator_test "E:/gRPC/grpc/vs/third_party/re2/Debug/string_generator_test.exe")
  set_tests_properties(string_generator_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(string_generator_test "E:/gRPC/grpc/vs/third_party/re2/Release/string_generator_test.exe")
  set_tests_properties(string_generator_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(string_generator_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/string_generator_test.exe")
  set_tests_properties(string_generator_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(string_generator_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/string_generator_test.exe")
  set_tests_properties(string_generator_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(string_generator_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dfa_test "E:/gRPC/grpc/vs/third_party/re2/Debug/dfa_test.exe")
  set_tests_properties(dfa_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dfa_test "E:/gRPC/grpc/vs/third_party/re2/Release/dfa_test.exe")
  set_tests_properties(dfa_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dfa_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/dfa_test.exe")
  set_tests_properties(dfa_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dfa_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/dfa_test.exe")
  set_tests_properties(dfa_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(dfa_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(exhaustive1_test "E:/gRPC/grpc/vs/third_party/re2/Debug/exhaustive1_test.exe")
  set_tests_properties(exhaustive1_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(exhaustive1_test "E:/gRPC/grpc/vs/third_party/re2/Release/exhaustive1_test.exe")
  set_tests_properties(exhaustive1_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(exhaustive1_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/exhaustive1_test.exe")
  set_tests_properties(exhaustive1_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(exhaustive1_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/exhaustive1_test.exe")
  set_tests_properties(exhaustive1_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(exhaustive1_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(exhaustive2_test "E:/gRPC/grpc/vs/third_party/re2/Debug/exhaustive2_test.exe")
  set_tests_properties(exhaustive2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(exhaustive2_test "E:/gRPC/grpc/vs/third_party/re2/Release/exhaustive2_test.exe")
  set_tests_properties(exhaustive2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(exhaustive2_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/exhaustive2_test.exe")
  set_tests_properties(exhaustive2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(exhaustive2_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/exhaustive2_test.exe")
  set_tests_properties(exhaustive2_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(exhaustive2_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(exhaustive3_test "E:/gRPC/grpc/vs/third_party/re2/Debug/exhaustive3_test.exe")
  set_tests_properties(exhaustive3_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(exhaustive3_test "E:/gRPC/grpc/vs/third_party/re2/Release/exhaustive3_test.exe")
  set_tests_properties(exhaustive3_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(exhaustive3_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/exhaustive3_test.exe")
  set_tests_properties(exhaustive3_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(exhaustive3_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/exhaustive3_test.exe")
  set_tests_properties(exhaustive3_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(exhaustive3_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(exhaustive_test "E:/gRPC/grpc/vs/third_party/re2/Debug/exhaustive_test.exe")
  set_tests_properties(exhaustive_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(exhaustive_test "E:/gRPC/grpc/vs/third_party/re2/Release/exhaustive_test.exe")
  set_tests_properties(exhaustive_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(exhaustive_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/exhaustive_test.exe")
  set_tests_properties(exhaustive_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(exhaustive_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/exhaustive_test.exe")
  set_tests_properties(exhaustive_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(exhaustive_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(random_test "E:/gRPC/grpc/vs/third_party/re2/Debug/random_test.exe")
  set_tests_properties(random_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(random_test "E:/gRPC/grpc/vs/third_party/re2/Release/random_test.exe")
  set_tests_properties(random_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(random_test "E:/gRPC/grpc/vs/third_party/re2/MinSizeRel/random_test.exe")
  set_tests_properties(random_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(random_test "E:/gRPC/grpc/vs/third_party/re2/RelWithDebInfo/random_test.exe")
  set_tests_properties(random_test PROPERTIES  _BACKTRACE_TRIPLES "E:/gRPC/grpc/third_party/re2/CMakeLists.txt;141;add_test;E:/gRPC/grpc/third_party/re2/CMakeLists.txt;0;")
else()
  add_test(random_test NOT_AVAILABLE)
endif()
